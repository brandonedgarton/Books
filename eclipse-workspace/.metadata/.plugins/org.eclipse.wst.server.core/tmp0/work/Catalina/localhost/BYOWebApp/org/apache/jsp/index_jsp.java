/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2023-09-13 03:55:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n");
      out.write("    <title>AI Image Generator</title>\n");
      out.write("    <link href=\"assets/css/stylesheet.css\" rel=\"stylesheet\" />\n");
      out.write("</head>\n");
      out.write("    <body>\n");
      out.write("        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"visual\" viewBox=\"0 0 900 600\" version=\"1.1\"><rect x=\"0\" y=\"0\" width=\"100vw\" height=\"100vh\" fill=\"#4FACF7\"/><defs><linearGradient id=\"grad1_0\" x1=\"33.3%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"><stop offset=\"20%\" stop-color=\"#4facf7\" stop-opacity=\"1\"/><stop offset=\"80%\" stop-color=\"#4facf7\" stop-opacity=\"1\"/></linearGradient></defs><defs><linearGradient id=\"grad2_0\" x1=\"0%\" y1=\"0%\" x2=\"66.7%\" y2=\"100%\"><stop offset=\"20%\" stop-color=\"#4facf7\" stop-opacity=\"1\"/><stop offset=\"80%\" stop-color=\"#4facf7\" stop-opacity=\"1\"/></linearGradient></defs><g transform=\"translate(900, 0)\"><path d=\"M0 405.6C-18.5 378.7 -37 351.8 -62.5 354.5C-88 357.3 -120.6 389.7 -138.7 381.2C-156.9 372.7 -160.7 323.3 -172 297.9C-183.3 272.5 -202.2 271.1 -223 265.8C-243.9 260.6 -266.8 251.5 -281.1 235.9C-295.5 220.3 -301.3 198.3 -309.2 178.5C-317 158.7 -326.9 141 -337.3 122.8C-347.8 104.6 -358.8 85.8 -370.3 65.3C-381.8 44.7 -393.7 22.4 -405.6 0L0 0Z\" fill=\"#FFFFFF\"/></g><g transform=\"translate(0, 600)\"><path d=\"M0 -405.6C18.7 -373.1 37.3 -340.6 58.3 -330.9C79.4 -321.2 102.8 -334.2 120 -329.8C137.3 -325.5 148.4 -303.7 174 -301.4C199.6 -299 239.9 -316.1 252.6 -301.1C265.3 -286 250.6 -238.7 255.9 -214.7C261.1 -190.7 286.5 -189.9 316.1 -182.5C345.7 -175.1 379.6 -160.9 381.2 -138.7C382.7 -116.5 351.9 -86.3 350.6 -61.8C349.3 -37.4 377.5 -18.7 405.6 0L0 0Z\" fill=\"#FFFFFF\"/></g></svg>\n");
      out.write("        <header>\n");
      out.write("            <h1>AI Image Generator</h1>\n");
      out.write("        </header>\n");
      out.write("        <section class=\"images-section\"></section>\n");
      out.write("        <section class=\"bottom-section\">\n");
      out.write("            <div class=\"input-container\">\n");
      out.write("                <input/>\n");
      out.write("                <div id=\"submit-icon\">Go!</div>\n");
      out.write("            </div>\n");
      out.write("        </section>\n");
      out.write("     \n");
      out.write("        <script src=\"assets/js/scripts.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
